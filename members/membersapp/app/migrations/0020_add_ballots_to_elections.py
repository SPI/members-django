# Generated by Django 4.2 on 2025-06-16 13:25

from django.db import migrations, models
import django.db.models.deletion


def populate_ballot_refs(apps, schema_editor):
    VoteElection = apps.get_model('app', 'VoteElection')
    VoteBallot = apps.get_model('app', 'VoteBallot')
    VoteOption = apps.get_model('app', 'VoteOption')
    VoteVote = apps.get_model('app', 'VoteVote')
    VoteVoteOption = apps.get_model('app', 'VoteVoteOption')

    # Create a ballot per election
    election_to_ballot = {}
    for election in VoteElection._default_manager.all():
        ballot = VoteBallot._default_manager.create(
            election_ref=election,
            title=election.title,
            winners=election.winners,
            system=election.system,
            allow_blank=election.allow_blank,
            description=election.description
        )
        election_to_ballot[election.pk] = ballot

    for vote in VoteVote._default_manager.all():
        vote.ballot_ref_id = election_to_ballot[vote.election_ref_id].pk
        vote.save()

    # Assign ballot to each VoteOption
    for option in VoteOption._default_manager.all():
        option.ballot_ref_id = election_to_ballot[option.election_ref_id].pk
        option.save()

    # Assign ballot to each VoteVoteOption via its option
    for vote_option in VoteVoteOption._default_manager.select_related('option_ref'):
        vote_option.ballot_ref_id = vote_option.option_ref.ballot_ref_id
        vote_option.save()


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0019_voteelection_allow_blank"),
    ]

    operations = [
        migrations.CreateModel(
            name="VoteBallot",
            fields=[
                ("ref", models.AutoField(primary_key=True, serialize=False)),
                (
                    "title",
                    models.CharField(max_length=256, verbose_name="Ballot title"),
                ),
                ("description", models.TextField(null=True)),
                ("winners", models.IntegerField(default=1)),
                ("system", models.IntegerField(verbose_name="Voting system")),
                (
                    "allow_blank",
                    models.BooleanField(default=True, verbose_name="Allow blank votes"),
                ),
                (
                    "election_ref",
                    models.ForeignKey(
                        db_column="election_ref",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.voteelection",
                    ),
                ),
            ],
            options={
                "db_table": "vote_ballot",
            },
        ),
        migrations.AlterUniqueTogether(
            name="voteoption",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="votevote",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="voteoption",
            name="ballot_ref",
            field=models.ForeignKey(
                db_column="ballot_ref",
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="app.voteballot",
            ),
        ),
        migrations.AddField(
            model_name="votevote",
            name="ballot_ref",
            field=models.ForeignKey(
                db_column="ballot_ref",
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="app.voteballot",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="voteoption",
            unique_together={
                ("ballot_ref", "option_character"),
                ("ballot_ref", "sort"),
            },
        ),
        migrations.AlterUniqueTogether(
            name="votevote",
            unique_together={("voter_ref", "ballot_ref")},
        ),
        migrations.RunPython(populate_ballot_refs),
        # Put back null=False
        migrations.AlterField(
            model_name='voteoption',
            name='ballot_ref',
            field=models.ForeignKey('app.VoteBallot', null=False, blank=False, db_column='ballot_ref', on_delete=models.RESTRICT)
        ),
        migrations.AlterField(
            model_name='votevote',
            name='ballot_ref',
            field=models.ForeignKey('app.VoteBallot', null=False, blank=False, db_column='ballot_ref', on_delete=models.RESTRICT)
        ),
        migrations.RemoveField(
            model_name="voteoption",
            name="election_ref",
        ),
        migrations.RemoveField(
            model_name="votevote",
            name="election_ref",
        ),
        migrations.RemoveField(
            model_name="voteelection",
            name="allow_blank",
        ),
        migrations.RemoveField(
            model_name="voteelection",
            name="description",
        ),
        migrations.RemoveField(
            model_name="voteelection",
            name="system",
        ),
        migrations.RemoveField(
            model_name="voteelection",
            name="winners",
        ),
    ]
